EMUL_DIR=../emulator

ifneq ($(wildcard ../../config-host.mak),)
include ../../config-host.mak
else
config-host.mak:
	@echo "Please call configure before running make!"
	@exit 1
endif

all: qemu skin_client
qemu: build_info ffmpeg_install check_hax
	cd ../../ && $(MAKE)
qemu_clean:
	cd ../../ && $(MAKE) clean
qemu_distclean:
	cd ../../ && $(MAKE) distclean

check_hax:
	@echo "build check hax"	
ifdef CONFIG_WIN32
	$(CC) -o check-hax.exe check_hax.c	
endif
ifdef CONFIG_DARWIN
	$(CC) -o check-hax check_hax.c	
endif
skin_client:
	ant -buildfile skin/client/build.xml make-jar

build_info:
	@echo "/* Automatically generated by Makefile - do not modify! */" > build_info.h
	@echo "const char build_version[] = \"`cat VERSION`\";" >> build_info.h
	@echo "const char build_date[] = \"`date +"%F %T %Z"`\";" >> build_info.h
	@echo "const char pkginfo_version[] = \"`sed -n '1p' ./../../package/pkginfo.manifest`\";" >> build_info.h
	@echo "const char pkginfo_maintainer[] = \"`sed -n '2p' ./../../package/pkginfo.manifest`\";" >> build_info.h
	@echo "const char pkginfo_githead[] = \"`git rev-parse HEAD`\";" >> build_info.h

ffmpeg:
	cd ../distrib/libav/ && $(MAKE)
ffmpeg_install: ffmpeg
	cd ../distrib/libav/ && $(MAKE) install
ffmpeg_clean:
	cd ../distrib/libav/ && $(MAKE) clean
ffmpeg_distclean:
	cd ../distrib/libav/ && $(MAKE) clean && rm -rf ${ARCH}

clean: ffmpeg_clean qemu_clean
ifdef CONFIG_WIN32
	rm -f check-hax.exe
endif
ifdef CONFIG_DARWIN
	rm -f check-hax
endif
distclean: ffmpeg_distclean qemu_distclean

install: all
	mkdir -p $(EMUL_DIR)/bin
	mkdir -p $(EMUL_DIR)/etc
	mkdir -p $(EMUL_DIR)/data 
	mkdir -p $(EMUL_DIR)/data/bios
	cp ../../i386-softmmu/qemu-system-i386 $(EMUL_DIR)/bin/emulator-x86
	cp skin/client/emulator-skin.jar $(EMUL_DIR)/bin
ifdef CONFIG_WIN32
	cp check-hax.exe $(EMUL_DIR)/bin
endif
ifdef CONFIG_DARWIN
	cp check-hax $(EMUL_DIR)/bin
endif

ifndef CONFIG_DARWIN
	cp ../../qemu-img $(EMUL_DIR)/bin
	cp -dpr ../license $(EMUL_DIR)
	cp -dpr ../../pc-bios/bios.bin $(EMUL_DIR)/data/bios
	cp -dpr ../../pc-bios/linuxboot.bin $(EMUL_DIR)/data/bios
	cp -dpr ../../pc-bios/pxe-rtl8139.rom $(EMUL_DIR)/data/bios
	cp -dpr ../../pc-bios/pxe-virtio.rom $(EMUL_DIR)/data/bios
	cp skin/client/lib/swt.jar $(EMUL_DIR)/bin/swt.jar
	cp -dpr skin/client/skins $(EMUL_DIR)
else
	cp ../../qemu-img $(EMUL_DIR)/bin
	cp -pPR ../license $(EMUL_DIR)
	cp -pPR ../../pc-bios/bios.bin $(EMUL_DIR)/data/bios
	cp -pPR ../../pc-bios/linuxboot.bin $(EMUL_DIR)/data/bios
	cp -pPR ../../pc-bios/pxe-rtl8139.rom $(EMUL_DIR)/data/bios
	cp -pPR ../../pc-bios/pxe-virtio.rom $(EMUL_DIR)/data/bios
	cp skin/client/lib/swt.jar $(EMUL_DIR)/bin/swt.jar
	cp -pPR skin/client/skins $(EMUL_DIR)
	cp -pPR skin/client/native_src/libshared.dylib $(EMUL_DIR)/bin
endif

ifdef CONFIG_LINUX
	cp -pPr ../distrib/initscript/tizen-kvm $(EMUL_DIR)/etc
	cp -pPr ../distrib/initscript/45-tizen-kvm.rules $(EMUL_DIR)/etc
else

endif

# for dibs system...
all_dibs: qemu skin_client_dibs
skin_client_dibs:
	ant -buildfile skin/client/build.xml -Dclasspath.dibs=$(ROOTDIR)/tools/emulator/bin make-jar-dibs
install_dibs: all_dibs
	mkdir -p $(EMUL_DIR)/bin
	mkdir -p $(EMUL_DIR)/etc
	mkdir -p $(EMUL_DIR)/data 
	mkdir -p $(EMUL_DIR)/data/bios
	cp ../../i386-softmmu/qemu-system-i386 $(EMUL_DIR)/bin/emulator-x86
	cp skin/client/emulator-skin.jar $(EMUL_DIR)/bin
ifdef CONFIG_WIN32
	cp check-hax.exe $(EMUL_DIR)/bin
else
	
endif

ifndef CONFIG_DARWIN
	cp ../../qemu-img $(EMUL_DIR)/bin
	cp -dpr ../license $(EMUL_DIR)
	cp -dpr ../../pc-bios/bios.bin $(EMUL_DIR)/data/bios
	cp -dpr ../../pc-bios/linuxboot.bin $(EMUL_DIR)/data/bios
	cp -dpr ../../pc-bios/pxe-rtl8139.rom $(EMUL_DIR)/data/bios
	cp -dpr ../../pc-bios/pxe-virtio.rom $(EMUL_DIR)/data/bios
	cp -dpr skin/client/skins $(EMUL_DIR)
else
	cp ../../qemu-img $(EMUL_DIR)/bin
	cp -pPR ../license $(EMUL_DIR)
	cp -pPR ../../pc-bios/bios.bin $(EMUL_DIR)/data/bios
	cp -pPR ../../pc-bios/linuxboot.bin $(EMUL_DIR)/data/bios
	cp -pPR ../../pc-bios/pxe-rtl8139.rom $(EMUL_DIR)/data/bios
	cp -pPR ../../pc-bios/pxe-virtio.rom $(EMUL_DIR)/data/bios
	cp -pPR skin/client/skins $(EMUL_DIR)
	cp -pPR skin/client/native_src/libshared.dylib $(EMUL_DIR)/bin
endif

ifdef CONFIG_LINUX
	cp -pPr ../distrib/initscript/tizen-kvm $(EMUL_DIR)/etc
	cp -pPr ../distrib/initscript/45-tizen-kvm.rules $(EMUL_DIR)/etc
else

endif
