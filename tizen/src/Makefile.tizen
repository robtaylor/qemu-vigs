# Makefile.tizen
# for TIZEN-maru board

$(call set-vpath, $(SRC_PATH):$(TARGET_PATH):$(SRC_PATH)/hw:$(SRC_PATH)/tizen/src:$(SRC_PATH)/tizen/src/hw:$(SRC_PATH)/tizen/src/skin:$(SRC_PATH)/tizen/src/SDL_gfx)

QEMU_CFLAGS += -I$(SRC_PATH)/hw -I$(SRC_PATH)/tizen/src
QEMU_CFLAGS += $(SDL_CFLAGS)
QEMU_CFLAGS += $(GLIB_CFLAGS)
ifdef CONFIG_DARWIN
QEMU_CFLAGS += -framework Foundation -framework SystemConfiguration
QEMU_CFLAGS += -framework Cocoa -framework QTKit -framework CoreVideo
QEMU_CFLAGS += -framework AppKit
endif
ifndef CONFIG_DEBUG_EXEC
CFLAGS += -g -O2
else
CFLAGS += -g -O0
endif

ifdef CONFIG_WIN32
LIBS += -lpng14
endif
ifdef CONFIG_LINUX
LIBS += -lpng
endif

ifdef CONFIG_DEBUG_EXEC
GL_CFLAGS := -Wall -g -O0 -fno-strict-aliasing
else
GL_CFLAGS := -Wall -g -O2 -fno-strict-aliasing
endif

# maru loader
obj-y += emulator.o emulator_legacy.o emulator_options.o emul_state.o maru_err_table.o

# osutil
obj-y += osutil.o
QEMU_CFLAGS += $(CURL_CFLAGS)
LIBS += $(CURL_LIBS)

ifdef CONFIG_LINUX
obj-y += osutil-linux.o
endif
ifdef CONFIG_WIN32
obj-y += osutil-win32.o
endif
ifdef CONFIG_DARWIN
obj-y += osutil-darwin.o
endif

# maru display
obj-y += maru_display.o
ifdef CONFIG_USE_SHM
obj-y += maru_shm.o
else
obj-y += maru_sdl.o maru_sdl_processing.o maru_finger.o
endif

# sdb
obj-y += sdb.o

# mloop event
obj-y += mloop_event.o

# NSRunLoop on Mac
ifdef CONFIG_DARWIN
obj-y += ns_event.o
endif

# debug channel
obj-y += debug_ch.o

# ECS
include $(SRC_PATH)/tizen/src/ecs/Makefile.tizen

# tethering
include $(SRC_PATH)/tizen/src/tethering/Makefile.tizen

# maru hardware
include $(SRC_PATH)/tizen/src/Makefile.tizen.$(TARGET_BASE_ARCH)

obj-y += maru_brightness.o
obj-y += maru_virtio_touchscreen.o
#obj-y += maru_usb_touchscreen.o
obj-y += maru_virtio_keyboard.o
obj-y += maru_virtio_hwkey.o
obj-y += maru_virtio_evdi.o
obj-y += maru_virtio_sensor.o
obj-y += maru_virtio_nfc.o
obj-y += maru_virtio_jack.o
obj-y += maru_virtio_power.o
obj-y += maru_virtio_esm.o
obj-y += maru_virtio_vmodem.o
#obj-y += maru_brill_codec.o
obj-$(CONFIG_LIBAV) += maru_brill_codec.o

obj-$(CONFIG_PCI) += maru_camera_common_pci.o
obj-$(CONFIG_LINUX) += maru_camera_linux_pci.o
obj-$(CONFIG_WIN32) += maru_camera_win32_pci.o
obj-$(CONFIG_DARWIN) += maru_camera_darwin_converter.o
obj-$(CONFIG_DARWIN) += maru_camera_darwin_pci.o
obj-$(CONFIG_DARWIN) += emul_state_darwin.o

obj-y += check_gl_core.o
obj-$(CONFIG_LINUX) += check_gl_glx.o
obj-$(CONFIG_WIN32) += check_gl_wgl.o
obj-$(CONFIG_DARWIN) += check_gl_cgl.o

ifdef CONFIG_LINUX # libs for maru camera on linux host
LIBS += -lv4l2 -lv4lconvert
endif

ifdef CONFIG_WIN32 # libs for maru camera on windows host
LIBS += -lole32 -loleaut32 -luuid -lstrmiids
endif

# maru skin
obj-y += maruskin_client.o maruskin_server.o maruskin_operation.o maruskin_keymap.o

# guest server
obj-y += guest_server.o
