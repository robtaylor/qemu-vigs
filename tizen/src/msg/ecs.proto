package ECS;


option java_package = "org.tizen.ecp.msg.genmsg.ecs";


message CheckVersionReq {
	required string version_str = 1;
}

message CheckVersionAns {
	required int32 errcode = 1;
	required string version_str = 2;
}

message KeepAliveReq {
	optional string time_str = 1;

}

message KeepAliveAns {
	optional string time_str = 1;
}


message StartReq {

}

message StartAns {
	optional int32 host_keyboard_onoff = 1;
	optional int32 earjack_onoff = 2;
	optional int32 camera_onoff = 3;
}

message InjectorReq {
	required string category = 1;
	required int32 length = 2;
	required int32 group = 3;
	required int32 action = 4; 
	optional bytes data = 5;
}

message InjectorAns {
	required int32 errcode = 1;
	optional string errstr = 2;
	required string category = 3;
	required int32 length = 4;
	required int32 group = 5;
	required int32 action = 6; 
	optional bytes data = 7;
}

message InjectorNtf {
	required string category = 1;
	required int32 length = 2;
	required int32 group = 3;
	required int32 action = 4; 
	optional bytes data = 5;
}

message DeviceReq {
	required string category = 1;
	required int32 length = 2;
	required int32 group = 3;
	required int32 action = 4; 
	optional bytes data = 5;
}

message DeviceAns {
	required int32 errcode = 1;
	optional string errstr = 2;
	required string category = 3;
	required int32 length = 4;
	required int32 group = 5;
	required int32 action = 6; 
	optional bytes data = 7;
}

message DeviceNtf {
	required string category = 1;
	required int32 length = 2;
	required int32 group = 3;
	required int32 action = 4; 
	optional bytes data = 5;
}


message ControlReq {
	required string command = 1;
}

message ControlAns {
	required int32 errcode = 1;
	optional string errmsg = 2;
}

message ControlNtf {
	required string category = 1;
	required string command = 2;
	optional bytes data = 3;
}

message MonitorReq {
	required string command = 1;
}

message MonitorAns {
	required int32 errcode = 1;
	optional string errmsg = 2;
	required string command = 3;
	optional bytes data = 4;
}

message MonitorNtf {
	required string command = 1;
	optional bytes data = 2;
}

message ScreenDumpReq {
	required string output_path = 1;
}

message ScreenDumpAns {
	required int32 errcode = 1;
	optional string errmsg = 2;
}


message Master {
	enum Type { 
	CHECKVERSION_REQ = 2; CHECKVERSION_ANS = 3; 
	KEEPALIVE_REQ = 4; KEEPALIVE_ANS = 5; 
	START_REQ = 6; START_ANS = 7; 
	INJECTOR_REQ = 8; INJECTOR_ANS = 9; INJECTOR_NTF = 10;
	DEVICE_REQ = 11; DEVICE_ANS = 12; DEVICE_NTF = 13; 
	CONTROL_REQ = 14; CONTROL_ANS = 15; CONTROL_NTF = 16; 
	MONITOR_REQ = 17; MONITOR_ANS = 18; MONITOR_NTF = 19; 
	SCREEN_DUMP_REQ = 20; SCREEN_DUMP_ANS = 21; 
	}
	
	required Type type = 1;

	optional CheckVersionReq checkversion_req = 2;
	optional CheckVersionAns checkversion_ans = 3;
	
	optional KeepAliveReq keepalive_req = 4;
	optional KeepAliveAns keepalive_ans = 5;
	
	optional StartReq start_req = 6;
	optional StartAns start_ans = 7;

	optional InjectorReq injector_req = 8;
	optional InjectorAns injector_ans = 9;
	optional InjectorNtf injector_ntf = 10;
	
	optional DeviceReq device_req = 11;
	optional DeviceAns device_ans = 12;
	optional DeviceNtf device_ntf = 13;

	optional ControlReq control_req = 14;
	optional ControlAns control_ans	= 15;
	optional ControlNtf control_ntf	= 16;

	optional MonitorReq monitor_req = 17;
	optional MonitorAns monitor_ans = 18;
	optional MonitorNtf monitor_ntf = 19;

	optional ScreenDumpReq screen_dump_req = 20;
	optional ScreenDumpAns screen_dump_ans = 21;

}


