/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_nfc_2eproto__INCLUDED
#define PROTOBUF_C_nfc_2eproto__INCLUDED

#include "../../../distrib/protobuf/protobuf-c.h"

PROTOBUF_C_BEGIN_DECLS

#include "ecs.pb-c.h"

typedef struct _ECS__NfcReq ECS__NfcReq;
typedef struct _ECS__NfcNtf ECS__NfcNtf;


/* --- enums --- */


/* --- messages --- */

struct  _ECS__NfcReq
{
  ProtobufCMessage base;
  char *category;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
};
#define ECS__NFC_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ecs__nfc_req__descriptor) \
    , NULL, 0,{0,NULL} }


struct  _ECS__NfcNtf
{
  ProtobufCMessage base;
  char *category;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
};
#define ECS__NFC_NTF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ecs__nfc_ntf__descriptor) \
    , NULL, 0,{0,NULL} }


/* ECS__NfcReq methods */
void   ecs__nfc_req__init
                     (ECS__NfcReq         *message);
size_t ecs__nfc_req__get_packed_size
                     (const ECS__NfcReq   *message);
size_t ecs__nfc_req__pack
                     (const ECS__NfcReq   *message,
                      uint8_t             *out);
size_t ecs__nfc_req__pack_to_buffer
                     (const ECS__NfcReq   *message,
                      ProtobufCBuffer     *buffer);
ECS__NfcReq *
       ecs__nfc_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ecs__nfc_req__free_unpacked
                     (ECS__NfcReq *message,
                      ProtobufCAllocator *allocator);
/* ECS__NfcNtf methods */
void   ecs__nfc_ntf__init
                     (ECS__NfcNtf         *message);
size_t ecs__nfc_ntf__get_packed_size
                     (const ECS__NfcNtf   *message);
size_t ecs__nfc_ntf__pack
                     (const ECS__NfcNtf   *message,
                      uint8_t             *out);
size_t ecs__nfc_ntf__pack_to_buffer
                     (const ECS__NfcNtf   *message,
                      ProtobufCBuffer     *buffer);
ECS__NfcNtf *
       ecs__nfc_ntf__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ecs__nfc_ntf__free_unpacked
                     (ECS__NfcNtf *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ECS__NfcReq_Closure)
                 (const ECS__NfcReq *message,
                  void *closure_data);
typedef void (*ECS__NfcNtf_Closure)
                 (const ECS__NfcNtf *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ecs__nfc_req__descriptor;
extern const ProtobufCMessageDescriptor ecs__nfc_ntf__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_nfc_2eproto__INCLUDED */
